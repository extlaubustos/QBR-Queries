-- `EXPLOTACION.LYL_LCM_RETENTION_CHURN_30_DAYS`

WITH DATA_USERS AS (
  SELECT
    SIT_SITE_ID,
    USER_ID,
    DS,
    SUM(PLAYBACK_TIME_MILLISECONDS/60000) AS TVM,
    SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%TV%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_TV,
    SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%MOBILE%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_MOBILE,
    SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%DESK%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_DESKTOP
  FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS`
  WHERE PLAYBACK_TIME_MILLISECONDS/1000 >= 20
    AND DS <= CURRENT_DATE - 1
  GROUP BY ALL
),

TABLE_CALENDAR AS (
  SELECT DISTINCT
    TIM_DAY,
    TIM_DAY + 30 AS TIM_DAY_CHURN,
    SIT_SITE_ID,
    USER_ID,
    SUM(TVM) AS TVM,
    SUM(TOTAL_TV) AS TVM_TV,
    SUM(TOTAL_MOBILE) AS TVM_MOBILE,
    SUM(TOTAL_DESKTOP) AS TVM_DESKTOP
  FROM DATA_USERS AS A
  INNER JOIN `meli-bi-data.WHOWNER.LK_TIM_DAYS` AS TD
    ON A.DS BETWEEN TD.TIM_DAY - 29 AND TD.TIM_DAY
  WHERE TD.TIM_DAY >= DATE'2025-01-01'
  GROUP BY ALL
)
-- Ejemplos de fechas:
-- 31-05 --> 02-05 AND 31-05
-- 30-06 --> 01-06 AND 30-06

SELECT
  T.TIM_DAY,
  T.TIM_DAY_CHURN,
  T.SIT_SITE_ID,
  CASE 
    WHEN SAFE_CAST(T.user_id AS INT64) IS NULL THEN 'not_log' ELSE 'log' 
  END AS flag_user,
  CONCAT(
    CASE WHEN T.TVM_TV > 0 THEN 'SMART' ELSE '' END, ' - ',
    CASE WHEN T.TVM_MOBILE > 0 THEN 'MOBILE' ELSE '' END, ' - ',
    CASE WHEN T.TVM_DESKTOP > 0 THEN 'DESKTOP' ELSE '' END
  ) AS PLATFORM_CONCAT,
  CASE 
    WHEN T.TVM < 3 THEN 'A. MENOR A 3 MIN'
    WHEN T.TVM BETWEEN 3 AND 10 THEN 'B. ENTRE 3 Y 10 MIN'
    WHEN T.TVM BETWEEN 10 AND 30 THEN 'C. ENTRE 10 Y 30 MIN'
    ELSE 'D. MAYOR A 30 MIN' 
  END AS RANGE_TVM_TIMEFRAME,
  COUNT(DISTINCT T.USER_ID) AS TOTAL_ACTIVE_TIM_DAY,
  COUNT(DISTINCT T2.USER_ID) AS TOTAL_RETENTION_TIM_DAY_CHURN
FROM TABLE_CALENDAR AS T
LEFT JOIN TABLE_CALENDAR AS T2
  ON T2.SIT_SITE_ID = T.SIT_SITE_ID
  AND T2.USER_ID = T.USER_ID
  AND T2.TIM_DAY = T.TIM_DAY_CHURN
GROUP BY ALL

-- Retention con Channel
WITH DATA_USERS AS (
  SELECT
    SIT_SITE_ID,
    USER_ID,
    DS,
    SUM(PLAYBACK_TIME_MILLISECONDS/60000) AS TVM,
    SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%TV%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_TV,
    SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%MOBILE%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_MOBILE,
    SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%DESK%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_DESKTOP
  FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS`
  WHERE PLAYBACK_TIME_MILLISECONDS/1000 >= 20
    AND DS <= CURRENT_DATE - 1
  GROUP BY ALL
),

TABLE_CALENDAR AS (
  SELECT DISTINCT
    TIM_DAY,
    TIM_DAY + 30 AS TIM_DAY_CHURN,
    SIT_SITE_ID,
    USER_ID,
    SUM(TVM) AS TVM,
    SUM(TOTAL_TV) AS TVM_TV,
    SUM(TOTAL_MOBILE) AS TVM_MOBILE,
    SUM(TOTAL_DESKTOP) AS TVM_DESKTOP
  FROM DATA_USERS AS A
  INNER JOIN `meli-bi-data.WHOWNER.LK_TIM_DAYS` AS TD
    ON A.DS BETWEEN TD.TIM_DAY - 29 AND TD.TIM_DAY
  WHERE TD.TIM_DAY >= DATE'2025-01-01'
  GROUP BY ALL
),

-- Agregamos CHANNEL
MATT_TOTAL_CHANNEL_MONTH AS (
  SELECT
    M.SIT_SITE_ID,
    COALESCE(c.USER_ID, S.USER_ID) AS USER_ID,
    DATE_TRUNC(CONVERSION_CREATED_DATE, MONTH) AS MONTH_ID,
    CASE 
      WHEN (MATT_PLAYER IS NOT NULL AND MATT_PLAYER != '') THEN MATT_PLAYER ELSE MATT_TYPE_SOURCE 
    END AS CHANNEL,
    ROUND(SUM(MATT_PORC_LAST_CLICK/100.0)) AS SUM_MATT
  FROM growth-attribution.production.BT_MATT_FINE_TUNED_MERCADOPLAY AS M
  LEFT JOIN `meli-bi-data.WHOWNER.LK_MPLAY_FIRST_PLAY` AS C 
    ON C.first_play_hash_id = M.CONVERSION_ID
    AND M.CONVERSION_CREATED_DATE <= DATE'2024-10-31'
  LEFT JOIN `meli-bi-data.WHOWNER.LK_MPLAY_FIRST_SESSION` AS S 
    ON S.FIRST_SESSION_HASH_ID = M.CONVERSION_ID
    AND M.CONVERSION_CREATED_DATE >= DATE'2024-11-01'
  GROUP BY ALL  
),

TOTAL_X_USER AS (
  SELECT
    M.SIT_SITE_ID,
    M.USER_ID,
    M.MONTH_ID,
    M.CHANNEL,
    M.SUM_MATT / SUM(SUM_MATT) OVER (PARTITION BY M.SIT_SITE_ID, M.USER_ID, M.MONTH_ID) AS ATTR_USER
  FROM MATT_TOTAL_CHANNEL_MONTH AS M
)

-- Query final de Retention con Channel
SELECT
  T.TIM_DAY,
  T.TIM_DAY_CHURN,
  T.SIT_SITE_ID,
  COALESCE(C.CHANNEL, 'UNKNOWN') AS CHANNEL,
  CASE 
    WHEN SAFE_CAST(T.user_id AS INT64) IS NULL THEN 'not_log' ELSE 'log' 
  END AS flag_user,
  CONCAT(
    CASE WHEN T.TVM_TV > 0 THEN 'SMART' ELSE '' END, ' - ',
    CASE WHEN T.TVM_MOBILE > 0 THEN 'MOBILE' ELSE '' END, ' - ',
    CASE WHEN T.TVM_DESKTOP > 0 THEN 'DESKTOP' ELSE '' END
  ) AS PLATFORM_CONCAT,
  CASE 
    WHEN T.TVM < 3 THEN 'A. MENOR A 3 MIN'
    WHEN T.TVM BETWEEN 3 AND 10 THEN 'B. ENTRE 3 Y 10 MIN'
    WHEN T.TVM BETWEEN 10 AND 30 THEN 'C. ENTRE 10 Y 30 MIN'
    ELSE 'D. MAYOR A 30 MIN' 
  END AS RANGE_TVM_TIMEFRAME,
  COUNT(DISTINCT T.USER_ID) AS TOTAL_ACTIVE_TIM_DAY,
  COUNT(DISTINCT T2.USER_ID) AS TOTAL_RETENTION_TIM_DAY_CHURN
FROM TABLE_CALENDAR AS T
LEFT JOIN TABLE_CALENDAR AS T2 
  ON T2.SIT_SITE_ID = T.SIT_SITE_ID
  AND T2.USER_ID = T.USER_ID
  AND T2.TIM_DAY = T.TIM_DAY_CHURN
LEFT JOIN TOTAL_X_USER AS C
  ON C.SIT_SITE_ID = T.SIT_SITE_ID
  AND C.USER_ID = T.USER_ID
  AND C.MONTH_ID = DATE_TRUNC(T.TIM_DAY, MONTH)
GROUP BY ALL

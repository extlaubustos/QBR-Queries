CREATE OR REPLACE TABLE `meli-sbox.MPLAY.NEGOCIO_MPLAY_CONTENT_PERFORMANCE_BEST_TITLES` AS (

WITH ESTADISTICAS_TIMEFRAME AS (
SELECT
A.USER_ID,
A.TIME_FRAME_ID,
A.SIT_SITE_ID,
A.TVM,
A.TVM_SHOWS,
A.TVM_MOVIE,
CASE WHEN TVM_SHOWS >=  PERCENTILE_CONT(TVM_SHOWS,0.80)OVER(PARTITION BY TIME_FRAME_ID,SIT_SITE_ID) 
THEN 'GREATER' 
             WHEN TVM_MOVIE >=  PERCENTILE_CONT(TVM_MOVIE,0.80)OVER(PARTITION BY TIME_FRAME_ID,SIT_SITE_ID) 
             THEN 'GREATER'             
             ELSE 'LEAST' END AS FLAG_ENGAGEMENT_PERCENTILE
        FROM 
        (SELECT 
            TIME_FRAME_ID,
            SIT_SITE_ID,
            USER_ID,
            SUM(TVM_TOTAL_TIMEFRAME) AS TVM,
            SUM(CASE WHEN CONTENT_TYPE = 'SHOW' THEN TVM_TOTAL_TIMEFRAME ELSE 0 END ) AS TVM_SHOWS,
            SUM(CASE WHEN CONTENT_TYPE = 'MOVIE' THEN TVM_TOTAL_TIMEFRAME ELSE 0 END ) AS TVM_MOVIE,
            FROM `meli-sbox.MPLAY.NEGOCIO_MPLAY_CONTENT_DATA_USER`
            GROUP BY ALL) AS A
  )
SELECT
E.TIME_FRAME_ID,
A.FLAG_N_R_FINAL,
A.SIT_SITE_ID,
CASE WHEN A.DS_AHA_MOMENT >= 3 THEN 'AHA_MOMENT' ELSE 'NOT_AHA' END AS FLAG_AHA_MOMENT,
E.FLAG_ENGAGEMENT_PERCENTILE,
CONTENT_TYPE,
TITLE_ADJUSTED,
COUNT(DISTINCT E.USER_ID) AS TOTAL_USERS,
SUM(E.TVM) AS TVM,
SUM(E.TVM_SHOWS) AS TVM_SHOWS,
SUM(E.TVM_MOVIE) AS TVM_MOVIE

FROM  ESTADISTICAS_TIMEFRAME AS E

    LEFT JOIN `meli-sbox.MPLAY.NEGOCIO_MPLAY_CONTENT_DATA_USER` AS A  ON E.USER_ID = A.USER_ID 
                                                                     AND E.SIT_SITE_ID  = A.SIT_SITE_ID
                                                                     AND A.FLAG_N_R_FINAL = 'NEW'
                                                                     AND A.CONTENT_ID = A.CONTENT_FLAG_N_R

WHERE E.FLAG_ENGAGEMENT_PERCENTILE = 'GREATER'                           

GROUP BY ALL
)
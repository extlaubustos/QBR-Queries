DECLARE mes_inicial DATE DEFAULT DATE '2025-07-01';
DECLARE meses_hacia_atras INT64 DEFAULT 4;

WITH MESES_ANALISIS AS (
  SELECT month_id
  FROM UNNEST(
    GENERATE_DATE_ARRAY(
      DATE_SUB(mes_inicial, INTERVAL meses_hacia_atras - 1 MONTH),
      mes_inicial,
      INTERVAL 1 MONTH
    )
  ) AS month_id
),

NEW_RET_RECO AS (
  SELECT
    *,
    DATE_TRUNC(DS, MONTH) AS TIME_FRAME_ID,
    LAG(DS) OVER (PARTITION BY SIT_SITE_ID, CUS_CUST_ID ORDER BY START_PLAY_TIMESTAMP ASC) AS DS_ANT,
    CASE
      WHEN LAG(DS) OVER (PARTITION BY SIT_SITE_ID, CUS_CUST_ID ORDER BY START_PLAY_TIMESTAMP ASC) IS NULL THEN 'NEW'
      WHEN DATE_DIFF(DS, LAG(DS) OVER (PARTITION BY SIT_SITE_ID, CUS_CUST_ID ORDER BY START_PLAY_TIMESTAMP ASC), DAY) <= 30 THEN 'RETAINED'
      ELSE 'RECOVERED'
    END AS FLAG_N_R
  FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS` 
  WHERE PLAYBACK_TIME_MILLISECONDS / 1000 >= 20
    AND DS <= CURRENT_DATE() - 1
),

ATTR_TIME_FRAME_ELEGIDO AS (
  SELECT
    SIT_SITE_ID,
    CUS_CUST_ID,
    TIME_FRAME_ID,
    FLAG_N_R
  FROM NEW_RET_RECO
  QUALIFY ROW_NUMBER() OVER (PARTITION BY SIT_SITE_ID, CUS_CUST_ID, TIME_FRAME_ID ORDER BY START_PLAY_TIMESTAMP ASC) = 1
),

CRUCE_FLAG AS (
  SELECT
    A.*,
    E.FLAG_N_R AS FLAG_N_R_FINAL
  FROM NEW_RET_RECO A
  LEFT JOIN ATTR_TIME_FRAME_ELEGIDO E
    ON E.SIT_SITE_ID = A.SIT_SITE_ID
    AND E.CUS_CUST_ID = A.CUS_CUST_ID
    AND E.TIME_FRAME_ID = A.TIME_FRAME_ID
),

RESUMEN_USER_TF AS (
  SELECT
    SIT_SITE_ID,
    CUS_CUST_ID,
    TIME_FRAME_ID,
    FLAG_N_R_FINAL,
    SUM(PLAYBACK_TIME_MILLISECONDS / 60000) AS TVM_TOTAL_TIMEFRAME,
    SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%TV%' THEN PLAYBACK_TIME_MILLISECONDS / 60000 ELSE 0 END) AS TOTAL_TV,
    SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%MOBILE%' THEN PLAYBACK_TIME_MILLISECONDS / 60000 ELSE 0 END) AS TOTAL_MOBILE,
    SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%DESK%' THEN PLAYBACK_TIME_MILLISECONDS / 60000 ELSE 0 END) AS TOTAL_DESKTOP,
    SUM(PLAYBACK_TIME_MILLISECONDS_CAST / 60000) AS TOTAL_CAST
  FROM CRUCE_FLAG
  GROUP BY 1, 2, 3, 4
),

USERS_SMART AS (
  SELECT
    R.SIT_SITE_ID,
    R.CUS_CUST_ID,
    R.TIME_FRAME_ID AS MONTH_ID,
    R.FLAG_N_R_FINAL AS LIFE_CYCLE_ACTUAL,
    CONCAT(
      CASE WHEN TOTAL_TV > 0 THEN 'SMART' ELSE '' END,
      CASE WHEN TOTAL_MOBILE > 0 THEN 'MOBILE' ELSE '' END,
      CASE WHEN TOTAL_DESKTOP > 0 THEN 'DESKTOP' ELSE '' END,
      CASE WHEN TOTAL_CAST > 0 THEN 'CAST' ELSE '' END
    ) AS PLATFORM_ACTUAL
  FROM RESUMEN_USER_TF R
  JOIN MESES_ANALISIS M ON R.TIME_FRAME_ID = M.month_id
  WHERE CONCAT(
      CASE WHEN TOTAL_TV > 0 THEN 'SMART' ELSE '' END,
      CASE WHEN TOTAL_MOBILE > 0 THEN 'MOBILE' ELSE '' END,
      CASE WHEN TOTAL_DESKTOP > 0 THEN 'DESKTOP' ELSE '' END,
      CASE WHEN TOTAL_CAST > 0 THEN 'CAST' ELSE '' END
    ) LIKE '%SMART%'
),

PLATFORM_PREV_RECOVERED AS (
  SELECT
    A.CUS_CUST_ID,
    A.SIT_SITE_ID,
    A.MONTH_ID,
    A.PLATFORM_ACTUAL,        
    A.LIFE_CYCLE_ACTUAL,        
    MAX(R.TIME_FRAME_ID) AS TIME_FRAME_ID_PREV
  FROM USERS_SMART A
  JOIN RESUMEN_USER_TF R
    ON R.CUS_CUST_ID = A.CUS_CUST_ID AND R.SIT_SITE_ID = A.SIT_SITE_ID
    AND R.TIME_FRAME_ID < A.MONTH_ID
  GROUP BY 1, 2, 3, 4, 5 
),

PLATFORM_PREV_MONTH AS (
  SELECT
    U.MONTH_ID,
    U.SIT_SITE_ID,
    CONCAT(
      CASE WHEN R.TOTAL_TV > 0 THEN 'SMART' ELSE '' END,
      CASE WHEN R.TOTAL_MOBILE > 0 THEN 'MOBILE' ELSE '' END,
      CASE WHEN R.TOTAL_DESKTOP > 0 THEN 'DESKTOP' ELSE '' END,
      CASE WHEN R.TOTAL_CAST > 0 THEN 'CAST' ELSE '' END
    ) AS PLATFORM_PREV,
    R.FLAG_N_R_FINAL AS LIFE_CYCLE_PREV,
    U.CUS_CUST_ID,
    U.PLATFORM_ACTUAL,
    U.LIFE_CYCLE_ACTUAL,
    U.TIME_FRAME_ID_PREV
  FROM PLATFORM_PREV_RECOVERED U
  JOIN RESUMEN_USER_TF R
    ON R.CUS_CUST_ID = U.CUS_CUST_ID AND R.SIT_SITE_ID = U.SIT_SITE_ID AND R.TIME_FRAME_ID = U.TIME_FRAME_ID_PREV
),

USERS_NEW AS (
  SELECT
    U.MONTH_ID,
    U.SIT_SITE_ID,
    CAST(NULL AS STRING) AS PLATFORM_PREV,
    CAST(NULL AS STRING) AS LIFE_CYCLE_PREV,
    U.CUS_CUST_ID,
    U.PLATFORM_ACTUAL,
    U.LIFE_CYCLE_ACTUAL,
    DATE_SUB(U.MONTH_ID, INTERVAL 1 MONTH) AS TIME_FRAME_ID_PREV  -- para unir con prev data
  FROM USERS_SMART U
  WHERE U.LIFE_CYCLE_ACTUAL = 'NEW'
),

TVM_PREV AS (
  SELECT
    SIT_SITE_ID,
    CUS_CUST_ID,
    TIME_FRAME_ID AS MONTH_ID_PREV,
    SUM(PLAYBACK_TIME_MILLISECONDS / 60000) AS TVM_PREV
  FROM CRUCE_FLAG
  GROUP BY 1, 2, 3
),

FREC_USER_TF_PREV AS (
  SELECT
    SIT_SITE_ID,
    CUS_CUST_ID,
    DATE_TRUNC(DS, MONTH) AS MONTH_ID_PREV,
    COUNT(DISTINCT DS) AS FREC_PREV
  FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS`
  WHERE PLAYBACK_TIME_MILLISECONDS / 1000 >= 20
    AND DS <= CURRENT_DATE() - 1
  GROUP BY 1, 2, 3
),

FREC_USER_TF AS (
  SELECT
    SIT_SITE_ID,
    CUS_CUST_ID,
    DATE_TRUNC(DS, MONTH) AS TIME_FRAME_ID,
    COUNT(DISTINCT DS) AS FRECUENCIA_DIAS
  FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS`
  WHERE PLAYBACK_TIME_MILLISECONDS / 1000 >= 20
    AND DS <= CURRENT_DATE() - 1
  GROUP BY 1, 2, 3
)

SELECT
  U.MONTH_ID,
  U.PLATFORM_PREV,
  U.PLATFORM_ACTUAL,
  U.LIFE_CYCLE_PREV,
  U.LIFE_CYCLE_ACTUAL,
  COUNT(DISTINCT U.CUS_CUST_ID) AS TOTAL_USERS,
  ROUND(AVG(F.FRECUENCIA_DIAS), 2) AS FREC_ACTUAL,
  ROUND(SUM(R.TVM_TOTAL_TIMEFRAME), 2) AS TVM_ACTUAL,
  ROUND(AVG(FP.FREC_PREV), 2) AS FREC_PREV,
  ROUND(SUM(TP.TVM_PREV), 2) AS TVM_PREV
FROM (
  SELECT * FROM PLATFORM_PREV_MONTH
  UNION ALL
  SELECT * FROM USERS_NEW
) U
JOIN RESUMEN_USER_TF R
  ON R.CUS_CUST_ID = U.CUS_CUST_ID
  AND R.SIT_SITE_ID = U.SIT_SITE_ID
  AND R.TIME_FRAME_ID = U.MONTH_ID
JOIN FREC_USER_TF F
  ON F.CUS_CUST_ID = U.CUS_CUST_ID
  AND F.SIT_SITE_ID = U.SIT_SITE_ID
  AND F.TIME_FRAME_ID = U.MONTH_ID
LEFT JOIN TVM_PREV TP
  ON TP.CUS_CUST_ID = U.CUS_CUST_ID
  AND TP.SIT_SITE_ID = U.SIT_SITE_ID
  AND TP.MONTH_ID_PREV = U.TIME_FRAME_ID_PREV
LEFT JOIN FREC_USER_TF_PREV FP
  ON FP.CUS_CUST_ID = U.CUS_CUST_ID
  AND FP.SIT_SITE_ID = U.SIT_SITE_ID
  AND FP.MONTH_ID_PREV = U.TIME_FRAME_ID_PREV
GROUP BY 1, 2, 3, 4, 5
ORDER BY 1, TOTAL_USERS DESC;
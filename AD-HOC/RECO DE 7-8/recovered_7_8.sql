WITH NEW_RET_RECO AS (
    SELECT 
        *
      , DATE_TRUNC(DS,DAY) AS TIME_FRAME_ID --> ACA SOLAMENTE ELEGIMOS EL TIMEFRAME QUE SE QUIERE VER, WEEK,MONTH,DAY 
      , LAG(DS,1)OVER(PARTITION BY SIT_SITE_ID,USER_ID ORDER BY START_PLAY_TIMESTAMP ASC) AS DS_ANT 
      , (CASE WHEN (LAG(DS,1)OVER(PARTITION BY SIT_SITE_ID,USER_ID ORDER BY START_PLAY_TIMESTAMP ASC)) IS NULL THEN 'NEW' 
      WHEN DATE_DIFF(DS, (LAG(DS,1)OVER(PARTITION BY SIT_SITE_ID,USER_ID ORDER BY START_PLAY_TIMESTAMP ASC)), DAY) <= 30 THEN 'RETAINED'
      WHEN DATE_DIFF(DS, (LAG(DS,1)OVER(PARTITION BY SIT_SITE_ID,USER_ID ORDER BY START_PLAY_TIMESTAMP ASC)), DAY) > 30  THEN 'RECOVERED' ELSE NULL END) AS FLAG_N_R
    FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS`
    WHERE  PLAYBACK_TIME_MILLISECONDS/1000 >= 20 
      AND DS <= CURRENT_DATE-1
  ),
  
  ATTR_TIME_FRAME_ELEGIDO AS (
          SELECT 
          SIT_SITE_ID,
          USER_ID,
          TIME_FRAME_ID,
          FLAG_N_R
          FROM NEW_RET_RECO
          QUALIFY ROW_NUMBER()  OVER(PARTITION BY SIT_SITE_ID,USER_ID, TIME_FRAME_ID ORDER BY START_PLAY_TIMESTAMP ASC) =  1
  ),
  CRUCE_FLAG AS (
          SELECT
          A.*,
          E.FLAG_N_R AS FLAG_N_R_FINAL
          FROM NEW_RET_RECO AS A
          LEFT JOIN ATTR_TIME_FRAME_ELEGIDO AS E ON E.SIT_SITE_ID = A.SIT_SITE_ID AND E.USER_ID = A.USER_ID AND E.TIME_FRAME_ID = A.TIME_FRAME_ID
  ),
  RESUMEN_USER_TF AS (
        SELECT
          SIT_SITE_ID,
          USER_ID,
          TIME_FRAME_ID,
          FLAG_N_R_FINAL,
          SUM(PLAYBACK_TIME_MILLISECONDS/60000) AS TVM_TOTAL_TIMEFRAME,
          SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%TV%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_TV,
          SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%MOBILE%' THEN  PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_MOBILE,
          SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%DESK%' THEN  PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_DESKTOP,
        FROM CRUCE_FLAG
        GROUP BY ALL
  ),
  MATT_TOTAL_CHANNEL_DAY AS (
  SELECT
    M.SIT_SITE_ID,
    COALESCE(c.USER_ID, S.USER_ID) AS USER_ID,
    DATE_TRUNC(CONVERSION_CREATED_DATE, DAY) AS DAY_ID,
    CASE
      WHEN (MATT_PLAYER IS NOT NULL AND MATT_PLAYER != '') THEN MATT_PLAYER
      ELSE MATT_TYPE_SOURCE
    END AS CHANNEL
  FROM growth-attribution.production.BT_MATT_FINE_TUNED_MERCADOPLAY AS M
  LEFT JOIN `meli-bi-data.WHOWNER.LK_MPLAY_FIRST_PLAY` AS C
    ON C.first_play_hash_id = M.CONVERSION_ID
    AND M.CONVERSION_CREATED_DATE <= DATE'2024-10-31'
  LEFT JOIN `meli-bi-data.WHOWNER.LK_MPLAY_FIRST_SESSION` AS S
    ON S.FIRST_SESSION_HASH_ID = M.CONVERSION_ID
    AND M.CONVERSION_CREATED_DATE >= DATE'2024-11-01'
  GROUP BY ALL
)
  SELECT
  RU.SIT_SITE_ID,
  RU.TIME_FRAME_ID AS DAY_ID,
  COALESCE(C.CHANNEL, 'UNKNOWN') AS CHANNEL,
  CASE WHEN RU.TVM_TOTAL_TIMEFRAME < 3 THEN 'A. MENOR A 3 MIN'
       WHEN RU.TVM_TOTAL_TIMEFRAME  BETWEEN 3 AND 10 THEN 'B. ENTRE 3 Y 10 MIN'
       WHEN RU.TVM_TOTAL_TIMEFRAME  BETWEEN 10 AND 30 THEN 'C. ENTRE 10 Y 30 MIN'              
       ELSE 'D. MAYOR A 30 MIN' 
       END AS TVM_TIMEFRAME,
  RU.FLAG_N_R_FINAL AS CUST_TYPE,
  CASE WHEN SAFE_CAST(RU.USER_ID AS INT64) IS NULL THEN 'NOT_LOG'
       ELSE 'LOG' 
       END AS FLAG_LOG,
  CONCAT(CASE WHEN RU.TOTAL_TV > 0 THEN 'SMART' ELSE '' END ,'',
  CASE WHEN RU.TOTAL_MOBILE > 0 THEN 'MOBILE' ELSE '' END ,'',
  CASE WHEN RU.TOTAL_DESKTOP > 0 THEN 'DESKTOP' ELSE '' END ) AS PLATFORM,
  SUM(RU.TVM_TOTAL_TIMEFRAME) AS TVM_TOTAL,
  COUNT(DISTINCT USER_ID) AS TOTAL_USERS
  FROM  RESUMEN_USER_TF RU
  LEFT JOIN MATT_TOTAL_CHANNEL_DAY AS C
    ON RU.SIT_SITE_ID = C.SIT_SITE_ID
    AND RU.USER_ID = C.USER_ID
    AND RU.TIME_FRAME_ID = C.DAY_ID
  WHERE RU.TIME_FRAME_ID BETWEEN '2025-08-06' AND '2025-08-10'
    AND RU.FLAG_N_R_FINAL = 'RECOVERED'
    AND C.CHANNEL IN ('EMAIL', 'PUSH APP ML')
  GROUP BY ALL
  ORDER BY DAY_ID;
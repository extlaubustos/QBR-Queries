CREATE TEMPORARY TABLE generos_temp (
    genre_original STRING,
    genre_normalizado STRING
);

INSERT INTO generos_temp (genre_original, genre_normalizado) VALUES
('Acción', 'Acción'),
('Acción & Aventura', 'Acción'),
('Action', 'Acción'),
('Adventure', 'Aventura'),
('Aliens', 'Aliens'),
('Amistad', 'Amistad'),
('Amizade', 'Amistad'),
('Animación', 'Animación'),
('Animación para adultos', 'Animación'),
('Animais e natureza', 'Animales'),
('Animation', 'Animación'),
('Animação', 'Animación'),
('Animação para adultos', 'Animación'),
('Anime', 'Anime'),
('Animé', 'Anime'),
('Antologia', 'Antología'),
('Antología', 'Antología'),
('Aventura', 'Aventura'),
('Ação', 'Acción'),
('Ação e Aventura', 'Acción'),
('Ação e aventura', 'Acción'),
('Baile', 'Baile'),
('Biografia', 'Biografía'),
('Biografía', 'Biografía'),
('Biography', 'Biografía'),
('Biográfica', 'Biografía'),
('Bélica', 'Bélica'),
('Childrens', 'Infantil'),
('Christmas', 'Fiestas y vacaciones'),
('Ciecia Ficción', 'Ciencia Ficción'),
('Ciencia', 'Ciencia'),
('Ciencia Ficción', 'Ciencia Ficción'),
('Ciencia ficción', 'Ciencia Ficción'),
('Ciencia ficción & Fantasía', 'Ciencia Ficción'),
('Cine', 'Cine'),
('Cine negro', 'Cine'),
('Ciência', 'Ciencia'),
('Cocina', 'Cocina'),
('Comedia', 'Comedia'),
('Comedia romántica', 'Comedia'),
('Comedy', 'Comedia'),
('Competencia', 'Competencia'),
('Competição', 'Competencia'),
('Comédia', 'Comedia'),
('Comédia romântica', 'Comedia'),
('Concertos', 'Concierto'),
('Concierto', 'Concierto'),
('Conciertos', 'Concierto'),
('Concursos', 'Concursos'),
('Coreano', 'Coreano'),
('Cozinha', 'Cocina'),
('Crescimento', 'Infantil'),
('Crime', 'Crimen'),
('Crimen', 'Crimen'),
('Crimenn', 'Crimen'),
('Dança', 'Baile'),
('Deportes', 'Deportes'),
('Desastre', 'Desastre'),
('Documental', 'Documental'),
('Documentales', 'Documental'),
('Documentary', 'Documental'),
('Documentário', 'Documental'),
('Documentários', 'Documental'),
('Docuserie', 'Documental'),
('Docuseries', 'Documental'),
('Drama', 'Drama'),
('Drama policial', 'Drama'),
('Entrevistas', 'Entrevista'),
('Espanhol', 'Español'),
('Español', 'Español'),
('Espionagem', 'Espionaje'),
('Espionaje', 'Espionaje'),
('Esportes', 'Deportes'),
('Estilo de vida', 'Estilo de vida'),
('Familia', 'Familia'),
('Family', 'Familia'),
('Família', 'Familia'),
('Fantasia', 'Fantasía'),
('Fantasy', 'Fantasía'),
('Fantasía', 'Fantasía'),
('Faroeste', 'Western'),
('Ficção cientifica', 'Ciencia Ficción'),
('Ficção científica', 'Ciencia Ficción'),
('Ficção científica e Fantasia', 'Ciencia Ficción'),
('Film noir', 'Cine negro'),
('Filme Noir', 'Cine negro'),
('Food', 'Comida'),
('Férias', 'Fiestas y vacaciones'),
('Game Show / Competição', 'Competencia'),
('Game Shows', 'Competencia'),
('Gaming', 'Gaming'),
('Guerra', 'Bélica'),
('Heróis', 'Heroes'),
('Historia', 'Historia'),
('Historias afrodescendientes', 'Historia'),
('History', 'Historia'),
('História', 'Historia'),
('Histórias afrodescendentes', 'Historia'),
('Histórica', 'Historia'),
('Histórico', 'Historia'),
('Holiday', 'Fiestas y vacaciones'),
('Horror', 'Terror'),
('Héroes', 'Heroes'),
('Infantil', 'Infantil'),
('Internacional', 'Internacional'),
('Jogos', 'Juegos'),
('LGBTQ+', 'LGBTQ+'),
('Latino', 'Latino'),
('Legal', 'Legal'),
('Lifestyle', 'Estilo de vida'),
('Madurez', 'Estilo de vida'),
('Medicina', 'Medicina'),
('Militar e guerra', 'Bélica'),
('Militar y guerra', 'Bélica'),
('Misterio', 'Suspenso'),
('Mistério', 'Suspenso'),
('Music', 'Musical'),
('Musical', 'Musical'),
('Musicales', 'Musical'),
('Mystery', 'Suspenso'),
('Música', 'Musical'),
('Naturaleza', 'Naturaleza'),
('Natureza', 'Naturaleza'),
('Noticias', 'Noticias'),
('Notícias', 'Noticias'),
('Novela', 'Novelas'),
('Novelas', 'Novelas'),
('Parodia', 'Parodia'),
('Paródia', 'Parodia'),
('Policial', 'Policial'),
('Procedimental', 'Policial'),
('REALITY', 'Reality'),
('Reality', 'Reality'),
('Realtiy', 'Reality'),
('Realty', 'Reality'),
('Religião', 'Religión'),
('Religião e espiritualidade', 'Religión'),
('Religión', 'Religión'),
('Religión y espiritualidad', 'Religión'),
('Romance', 'Romance'),
('Saúde e bem-estar', 'Salud y bienestar'),
('Sci-Fi', 'Ciencia Ficción'),
('Science Fiction', 'Ciencia Ficción'),
('Series', 'Series'),
('Sobrevivência', 'Supervivencia'),
('Sport', 'Deportes'),
('Sports', 'Deportes'),
('Super-heróis', 'Heroes'),
('Superhéroe', 'Heroes'),
('Superhéroes', 'Heroes'),
('Supernatural', 'Sobrenatural'),
('Supervivencia', 'Supervivencia'),
('Suspense', 'Suspenso'),
('Suspenso', 'Suspenso'),
('Série documental', 'Series'),
('Talk Show', 'Podcast'),
('Tecnologia', 'Tecnologia'),
('Tecnología', 'Tecnologia'),
('Telenovela', 'Novelas'),
('Telenovelas', 'Novelas'),
('Terror', 'Terror'),
('Thriller', 'Terror'),
('True Crime', 'Crimen'),
('Vacaciones', 'Fiestas y vacaciones'),
('Variedad', 'Variedad'),
('Variedades', 'Variedad'),
('Viagens', 'Viajes'),
('Viajes', 'Viajes'),
('Western', 'Western');

WITH exploded_genres AS (
  SELECT
    CONTENT_ID,
    TRIM(g) AS genre_original,
    idx + 1 AS genre_position,
    ARRAY_LENGTH(SPLIT(REPLACE(REPLACE(REPLACE(GENRE, '[', ''), ']', ''), '"', ''), ',')) AS genre_count
  FROM
    `meli-bi-data.WHOWNER.LK_MKT_MPLAY_CATALOGUE`,
    UNNEST(SPLIT(REPLACE(REPLACE(REPLACE(GENRE, '[', ''), ']', ''), '"', ''), ',')) AS g WITH OFFSET AS idx
),
normalized_genres AS (
  SELECT
    eg.CONTENT_ID,
    eg.genre_original,
    eg.genre_position,
    eg.genre_count,
    n.genre_normalizados
  FROM exploded_genres eg
    LEFT JOIN generos_temp n
      ON TRIM(eg.genre_original) = n.genre_original
  WHERE n.genre_normalizados IS NOT NULL
),
genres_with_weights AS (
  SELECT
    *,
    SAFE_DIVIDE((genre_count - genre_position + 1), (genre_count * (genre_count + 1) / 2)) AS genre_weight
  FROM normalized_genres
),
valid_plays AS (
  SELECT
    CONTENT_ID,
    PLAY_ID,
    DATE_TRUNC(DS, MONTH) AS MONTH_ID
  FROM
    `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS`
  WHERE
    SAFE_DIVIDE(PLAYBACK_TIME_MILLISECONDS, 1000) >= 20
),
joined AS (
  SELECT
    p.PLAY_ID,
    p.MONTH_ID,
    gw.genre_normalizados AS genre,
    gw.CONTENT_ID,
    gw.genre_weight
  FROM genres_with_weights gw
  INNER JOIN valid_plays p
    ON gw.CONTENT_ID = p.CONTENT_ID
)
SELECT
  MONTH_ID,
  genre,
  COUNT(DISTINCT PLAY_ID) AS cantidad_plays,
  COUNT(DISTINCT CONTENT_ID) AS cantidad_titulos,
  ROUND(SUM(genre_weight), 2) AS total_plays_ponderados
FROM joined
GROUP BY all
ORDER BY total_plays_ponderados DESC
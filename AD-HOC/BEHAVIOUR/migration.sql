WITH NEW_RET_RECO AS
(
    SELECT
        *
    , DATE_TRUNC(DS, MONTH) AS TIME_FRAME_ID
    , LAG(DS, 1) OVER(PARTITION BY SIT_SITE_ID, USER_ID ORDER BY START_PLAY_TIMESTAMP ASC) AS DS_ANT
    , (CASE WHEN (LAG(DS, 1) OVER(PARTITION BY SIT_SITE_ID, USER_ID ORDER BY START_PLAY_TIMESTAMP ASC)) IS NULL THEN 'NEW'
            WHEN DATE_DIFF(DS, (LAG(DS, 1) OVER(PARTITION BY SIT_SITE_ID, USER_ID ORDER BY START_PLAY_TIMESTAMP ASC)), DAY) <= 30 THEN 'RETAINED'
            WHEN DATE_DIFF(DS, (LAG(DS, 1) OVER(PARTITION BY SIT_SITE_ID, USER_ID ORDER BY START_PLAY_TIMESTAMP ASC)), DAY) > 30 THEN 'RECOVERED'
            ELSE NULL END) AS FLAG_N_R
    FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS`
    WHERE PLAYBACK_TIME_MILLISECONDS/1000 >= 20
    AND DS <= CURRENT_DATE - 1
),
ATTR_TIME_FRAME_ELEGIDO AS (
    SELECT
        SIT_SITE_ID,
        USER_ID,
        TIME_FRAME_ID,
        FLAG_N_R
    FROM NEW_RET_RECO
    QUALIFY ROW_NUMBER() OVER(PARTITION BY SIT_SITE_ID, USER_ID, TIME_FRAME_ID ORDER BY START_PLAY_TIMESTAMP ASC) = 1
),
CRUCE_FLAG AS (
    SELECT
        A.*,
        E.FLAG_N_R AS FLAG_N_R_FINAL
    FROM NEW_RET_RECO AS A
    INNER JOIN ATTR_TIME_FRAME_ELEGIDO AS E ON E.SIT_SITE_ID = A.SIT_SITE_ID AND E.USER_ID = A.USER_ID AND E.TIME_FRAME_ID = A.TIME_FRAME_ID
),
RESUMEN_USER_TF AS (
    SELECT
        SIT_SITE_ID,
        USER_ID,
        TIME_FRAME_ID,
        FLAG_N_R_FINAL,
        SUM(PLAYBACK_TIME_MILLISECONDS/60000) AS TVM_TOTAL_TIMEFRAME,
        SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%TV%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_TV,
        SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%MOBILE%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_MOBILE,
        SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%DESK%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) AS TOTAL_DESKTOP,
        SUM(CASE WHEN PLAYBACK_TIME_MILLISECONDS_CAST/1000 >= 20 THEN PLAYBACK_TIME_MILLISECONDS_CAST/60000 ELSE 0 END) AS TOTAL_CAST
    FROM CRUCE_FLAG
    GROUP BY ALL
),
BASE_PLATFORM AS (
    SELECT
        USER_ID,
        SIT_SITE_ID,
        TIME_FRAME_ID AS MONTH_ID,
        FLAG_N_R_FINAL AS CUST_TYPE,
        TVM_TOTAL_TIMEFRAME,
        CASE
            WHEN ROUND(TVM_TOTAL_TIMEFRAME, 2) = ROUND(TOTAL_CAST, 2) AND TOTAL_CAST > 0 THEN 'CAST' -- CAST PURO
            ELSE CONCAT(
                CASE WHEN TOTAL_TV > 0 THEN 'SMART' ELSE '' END ,'',
                CASE WHEN TOTAL_MOBILE > 0 THEN 'MOBILE' ELSE '' END ,'',
                CASE WHEN TOTAL_DESKTOP > 0 THEN 'DESKTOP' ELSE '' END ,'',
                CASE WHEN TOTAL_CAST > 0 THEN 'CAST' ELSE '' END
            )
        END AS PLATFORM
    FROM  RESUMEN_USER_TF
    WHERE TIME_FRAME_ID >= '2024-01-01'
    GROUP BY ALL
),
BASE_PLATFORM_2 AS (
    SELECT
        USER_ID,
        MONTH_ID,
        CUST_TYPE,
        TVM_TOTAL_TIMEFRAME,
        PLATFORM,
        SIT_SITE_ID,
        CASE
            WHEN LEFT(PLATFORM, 5) = 'SMART' AND LENGTH(PLATFORM) > 5 THEN 'MULTI W/SMART'
            WHEN PLATFORM = 'SMART' THEN 'SMART'
            WHEN PLATFORM = 'MOBILE' THEN 'MOBILE'
            WHEN PLATFORM = 'DESKTOP' THEN 'DESKTOP'
            WHEN PLATFORM = 'CAST' THEN 'CAST'
            WHEN PLATFORM LIKE '%CAST%' THEN 'MULTI W/SMART'
            ELSE 'MULTI OTHERS'
        END AS PLATFORM_V2,
        CASE WHEN SAFE_CAST(user_id as int64) IS NOT null THEN 'LOG' 
        ELSE 'NOT_LOG' 
        END AS FLAG_LOG
    FROM BASE_PLATFORM
),
MIGRATION_STEP AS (
    SELECT
        USER_ID,
        MONTH_ID,
        PLATFORM_V2 AS PLATFORM_ORIGIN,
        FLAG_LOG,
        CUST_TYPE,
        SIT_SITE_ID,
        CASE WHEN TVM_TOTAL_TIMEFRAME < 3 THEN 'A. MENOR A 3 MIN'
         WHEN TVM_TOTAL_TIMEFRAME  BETWEEN 3 AND 10 THEN 'B. ENTRE 3 Y 10 MIN'
         WHEN TVM_TOTAL_TIMEFRAME  BETWEEN 10 AND 30 THEN 'C. ENTRE 10 Y 30 MIN'            
         ELSE 'D. MAYOR A 30 MIN' 
         END AS TVM_TIMEFRAME,
        LEAD(PLATFORM_V2, 1) OVER (
            PARTITION BY USER_ID ORDER BY MONTH_ID ASC
        ) AS PLATFORM_DESTINATION_M1
    FROM
        BASE_PLATFORM_2
),
MIGRATION_CLASSIFIED AS (
    SELECT
        MONTH_ID,
        PLATFORM_ORIGIN,
        FLAG_LOG,
        CUST_TYPE,
        TVM_TIMEFRAME,
        SIT_SITE_ID,
        CASE
            WHEN PLATFORM_DESTINATION_M1 IS NULL THEN 'CHURNED'
            WHEN PLATFORM_ORIGIN = PLATFORM_DESTINATION_M1 THEN 'RETAINED SAME PLATFORM'
            WHEN PLATFORM_ORIGIN != PLATFORM_DESTINATION_M1 THEN PLATFORM_DESTINATION_M1
            ELSE 'OTHER'
        END AS MIGRATION_FLOW_DESTINATION
    FROM
        MIGRATION_STEP
)
SELECT
    MONTH_ID,
    SIT_SITE_ID,
    PLATFORM_ORIGIN,
    FLAG_LOG,
    CUST_TYPE,
    TVM_TIMEFRAME,
    MIGRATION_FLOW_DESTINATION,
    COUNT(1) AS TOTAL_USERS
FROM
    MIGRATION_CLASSIFIED
GROUP BY
    ALL
ORDER BY
    MONTH_ID, PLATFORM_ORIGIN;
CREATE OR REPLACE TABLE `meli-bi-data.SBOX_MELIIAM.LYL_ANALISE_AHA_PLAY_QBR2` AS

WITH

SALES AS
(
SELECT        
bd.SIT_SITE_ID,        
BD.ORD_BUYER.ID AS CUS_CUST_ID,        
DATE_TRUNC(ORD_CREATED_DT, MONTH) AS MES_COMPRA,
ORD_CREATED_DT DIA_COMPRA,
COUNT(DISTINCT COALESCE(bd.CRT_PURCHASE_ID, bd.ORD_ORDER_ID)) AS TX,        
SUM(bd.ORD_ITEM.QTY * bd.ORD_ITEM.UNIT_PRICE) AS TGMV,
FROM `meli-bi-data.WHOWNER.BT_ORD_ORDERS` BD
WHERE 1=1
--AND bd.SIT_SITE_ID IN ('MLB')
AND BD.ORD_TGMV_FLG = TRUE
AND COALESCE (BD.ORD_AUTO_OFFER_FLG, FALSE) = FALSE
AND BD.ORD_CLOSED_DT IS NOT NULL
AND BD.ORD_CATEGORY.MARKETPLACE_ID='TM'
AND ORD_ORDER_MSHOPS_FLG=FALSE
AND ORD_ORDER_PROXIMITY_FLG=FALSE
AND DATE_TRUNC(ORD_CREATED_DT, MONTH) >= '2023-01-01'
AND COALESCE(DATE(BD.ord_closed_dttm), DATE('2099-12-31')) < current_date()
GROUP BY 1, 2, 3,4
),


SESSIONS AS
(
SELECT *,
DATE_DIFF(DS, LAG(DS) OVER (PARTITION BY SIT_SITE_ID, CUS_CUST_ID ORDER BY DS), DAY) AS RECENCIA,
DATE_DIFF(DS, LAG(DS, 2) OVER (PARTITION BY SIT_SITE_ID, CUS_CUST_ID ORDER BY DS), DAY) AS RECENCIA_2
FROM
(
SELECT
SIT_SITE_ID,
CUS_CUST_ID,
DATE(DS) AS DS,
COUNT(DISTINCT SESSION_ID) AS SESSIONS,
SUM(IFNULL(TOTAL_FEED_IMPRESSIONS,0)) AS IMPRESSIONS
FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_SESSION` S
WHERE 1=1
--AND SIT_SITE_ID IN ('MLB')
AND CUS_CUST_ID IS NOT NULL
GROUP BY 1, 2, 3
)
),

PLAYS AS
(
SELECT *,
DATE_DIFF(DS, LAG(DS) OVER (PARTITION BY SIT_SITE_ID, CUS_CUST_ID ORDER BY DS), DAY) AS RECENCIA,
DATE_DIFF(DS, LAG(DS, 2) OVER (PARTITION BY SIT_SITE_ID, CUS_CUST_ID ORDER BY DS), DAY) AS RECENCIA_2,
MIN(DS) OVER (PARTITION BY SIT_SITE_ID, CUS_CUST_ID) AS DIA_PRIMEIRO_PLAY
FROM
(
SELECT  
SIT_SITE_ID,
CUS_CUST_ID,
DATE(DS) AS DS,
COUNT(DISTINCT PLAY_ID) AS PLAYS,
SUM(IFNULL(PLAYBACK_TIME_MILLISECONDS/1000*60,0)) AS PLAY_TIME,
CASE
            WHEN UPPER(device_platform) = '/WEB/DESKTOP'    THEN 'DESKTOP'
            WHEN UPPER(device_platform) = '/MOBILE/ANDROID' THEN 'MOBILE'
            WHEN UPPER(device_platform) = '/MOBILE/IOS'     THEN 'MOBILE'
            WHEN UPPER(device_platform) = '/WEB/MOBILE'     THEN 'MOBILE'
            WHEN UPPER(device_platform) = '/TV/MACOS'       THEN 'SMART-TV'
            WHEN UPPER(device_platform) = '/TV/MAC OS X'    THEN 'SMART-TV'
            WHEN UPPER(device_platform) = '/TV/WEB0S'       THEN 'SMART-TV'
            WHEN UPPER(device_platform) = '/TV/TIZEN'       THEN 'SMART-TV'
            WHEN UPPER(device_platform) = '/TV/ANDROID'     THEN 'SMART-TV'
            WHEN UPPER(device_platform) = '/TV'             THEN 'SMART-TV'
            WHEN UPPER(device_platform) IS NULL             THEN 'NULL'
                                                           ELSE UPPER(device_platform)
          END AS platform,
          CASE
            WHEN UPPER(device_platform) = '/WEB/DESKTOP'    THEN 'DESKTOP/MOBILE'
            WHEN UPPER(device_platform) = '/MOBILE/ANDROID' THEN 'DESKTOP/MOBILE'
            WHEN UPPER(device_platform) = '/MOBILE/IOS'     THEN 'DESKTOP/MOBILE'
            WHEN UPPER(device_platform) = '/WEB/MOBILE'     THEN 'DESKTOP/MOBILE'
            WHEN UPPER(device_platform) = '/TV/MACOS'       THEN 'SMART-TV'
            WHEN UPPER(device_platform) = '/TV/MAC OS X'    THEN 'SMART-TV'
            WHEN UPPER(device_platform) = '/TV/WEB0S'       THEN 'SMART-TV'
            WHEN UPPER(device_platform) = '/TV/TIZEN'       THEN 'SMART-TV'
            WHEN UPPER(device_platform) = '/TV/ANDROID'     THEN 'SMART-TV'
            WHEN UPPER(device_platform) = '/TV'             THEN 'SMART-TV'
            WHEN UPPER(device_platform) IS NULL             THEN 'NULL'
                                                           ELSE UPPER(device_platform)
          END AS platform_agg,

FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS` P
WHERE 1=1
--AND SIT_SITE_ID IN ('MLB')
AND P.PLAYBACK_TIME_MILLISECONDS >= 20000
AND CUS_CUST_ID IS NOT NULL
GROUP BY 1, 2, 3,6,7
)
),

DEVICE_DIA AS
(
SELECT
SIT_SITE_ID,
CUS_CUST_ID,
DS,
DATE_TRUNC(DS, MONTH) AS MES_PLAY,
COUNTIF(platform_agg = 'SMART-TV') device_tv,
COUNTIF(platform_agg = 'DESKTOP/MOBILE') device_desk_app
FROM PLAYS
WHERE 1=1
--AND DS > '2025-03-19'
GROUP BY ALL
ORDER BY CUS_CUST_ID, DS ASC
),

DEVICE_MES AS (
SELECT
SIT_SITE_ID,
CUS_CUST_ID,
MES_PLAY,
SUM(device_tv) device_tv,
SUM(device_desk_app) device_desk_app,
CASE 
  WHEN SUM(device_tv) > 0 AND SUM(device_desk_app) = 0 THEN 'TV' 
  WHEN SUM(device_tv) = 0 AND SUM(device_desk_app) > 0 THEN 'DESKTOP_APP' 
  WHEN SUM(device_tv) > 0 AND SUM(device_desk_app) > 0 THEN 'MULTI' ELSE NULL END AS DEVICE
FROM DEVICE_DIA
GROUP BY ALL
ORDER BY CUS_CUST_ID, MES_PLAY
),

PARTIDA AS
(
SELECT DISTINCT SIT_SITE_ID, CUS_CUST_ID, DS
FROM
(
SELECT DISTINCT SIT_SITE_ID, CUS_CUST_ID, DS FROM SESSIONS
UNION ALL
SELECT DISTINCT SIT_SITE_ID, CUS_CUST_ID, DS FROM PLAYS
)
),

PRIMEIRO_CONTATO AS
(
SELECT
SIT_SITE_ID,
CUS_CUST_ID,
MIN(DS) AS DATA_INI
FROM PARTIDA
WHERE 1=1
GROUP BY 1, 2
),

TABELA AS
(
SELECT
A.SIT_SITE_ID,
A.CUS_CUST_ID,
DATE_TRUNC(B.DATA_INI, MONTH) AS MES_INI,   -- primeiro contato
B.DATA_INI,   -- primeiro contato
A.DIA_PRIMEIRO_PLAY,
DATE_TRUNC(A.DS, MONTH) AS MES,
A.DS AS DIA,
DATE_DIFF(A.DS, B.DATA_INI, DAY)+1 AS DIA_INDEX,    -- relativo ao primeiro contato
SAFE_CAST(CEILING((DATE_DIFF(A.DS, B.DATA_INI, DAY)+1)/7) AS INT64) AS SEMANA_INDEX,    -- relativo ao primeiro contato
SAFE_CAST(CEILING((DATE_DIFF(A.DS, B.DATA_INI, DAY)+1)/30) AS INT64) AS MES_INDEX,      -- relativo ao primeiro contato
IFNULL(C.SESSIONS,0) AS SESSIONS,
IFNULL(C.IMPRESSIONS,0) AS IMPRESSIONS,
IFNULL(A.PLAYS,0) AS PLAYS,
IFNULL(A.PLAY_TIME,0) AS PLAY_TIME,
C.RECENCIA AS RECENCIA_SESSIONS,
C.RECENCIA_2 AS RECENCIA_SESSIONS_2,
A.RECENCIA AS RECENCIA_PLAYS,
A.RECENCIA_2 AS RECENCIA_PLAYS_2,
IFNULL(E.TGMV,0) TGMV
FROM PLAYS A
LEFT JOIN PRIMEIRO_CONTATO B ON A.SIT_SITE_ID = B.SIT_SITE_ID AND A.CUS_CUST_ID = B.CUS_CUST_ID
LEFT JOIN SESSIONS C ON A.SIT_SITE_ID = C.SIT_SITE_ID AND A.CUS_CUST_ID = C.CUS_CUST_ID AND A.DS = C.DS
--LEFT JOIN PLAYS D ON A.SIT_SITE_ID = D.SIT_SITE_ID AND A.CUS_CUST_ID = D.CUS_CUST_ID AND A.DS = D.DS
LEFT JOIN SALES E ON A.SIT_SITE_ID = E.SIT_SITE_ID AND A.CUS_CUST_ID = E.CUS_CUST_ID AND A.DS = E.DIA_COMPRA
WHERE 1=1
),

 --SELECT 
 --MES,
 --COUNT(DISTINCT CUS_CUST_ID) TOTAL_VIEWERS
 --FROM TABELA B
 --WHERE MES BETWEEN '2024-07-01' AND '2025-02-01'
 --GROUP BY ALL
 --ORDER BY 1 

AHA AS    -- em alguma ventana de 30 dias, alcanca 3 dias com play
(
SELECT '3 dias com play em 30 dias' AS AHA,
SIT_SITE_ID,
CUS_CUST_ID,
MIN(MES_INI) AS MES_PRIMEIRO_CONTATO,
MIN(DATA_INI) AS DIA_PRIMEIRO_CONTATO,
MIN(DIA_PRIMEIRO_PLAY) AS DIA_PRIMEIRO_PLAY,
MIN(DATE_ADD(DIA, INTERVAL -RECENCIA_PLAYS_2 DAY)) AS DIA_AHA_INI,
MIN(DIA) AS DIA_AHA_FIM,
-- DATE_TRUNC(MIN(DIA), MONTH) AS MES_AHA_FIM,
-- DATE_TRUNC(MIN(DIA), WEEK(MONDAY)) AS SEMANA_AHA_FIM,
-- MIN(DIA_INDEX) AS DIA_INDEX_AHA,   -- relativo ao primeiro contato,
MIN(MES_INDEX) AS MES_INDEX_AHA   -- relativo ao primeiro contato
FROM TABELA
WHERE 1=1
AND IFNULL(RECENCIA_PLAYS_2,999) < 30
GROUP BY 1, 2, 3
),

-- -- CRITERIO ANTIGO DE AHA (ALCANCAR 3+ DIAS COM PLAY NOS 30 PRIMEIROS DIAS A PARTIR DO PRIMEIRO CONTATO)
-- SELECT DISTINCT
-- SIT_SITE_ID,
-- MES_PRIMEIRO_CONTATO AS MES_COHORT,
-- COUNT(DISTINCT CUS_CUST_ID) AS USERS
-- -- CUS_CUST_ID
-- FROM AHA
-- WHERE 1=1
-- -- AND SIT_SITE_ID = 'MLB'
-- AND MES_INDEX_AHA = 1
-- GROUP BY 1, 2
-- ORDER BY 1, 2

-- CRITERIO NOVO DE AHA (ALCANCAR 3+ DIAS COM PLAY EM QUALQUER VENTANA DE 30 DIAS)
TABELA2 AS
(
SELECT DISTINCT
SIT_SITE_ID,
CUS_CUST_ID,
MES_PRIMEIRO_CONTATO AS MES_COHORT,
--DATE_TRUNC(DIA_AHA_FIM, MONTH) AS MES_COHORT,
--DATE_TRUNC(DIA_AHA_FIM, WEEK(MONDAY)) AS SEMANA_COHORT,
-- COUNT(DISTINCT CUS_CUST_ID) AS USERS
DIA_PRIMEIRO_PLAY,
DIA_AHA_INI,
DIA_AHA_FIM,
DATE_TRUNC(DIA_AHA_FIM, MONTH) MES_AHA,
MES_INDEX_AHA
FROM AHA A
WHERE 1=1
-- AND SIT_SITE_ID = 'MLB'
-- AND MES_INDEX_AHA = 1
-- GROUP BY 1, 2
-- ORDER BY 1, 2
)


SELECT 
A.SIT_SITE_ID,
A.CUS_CUST_ID AS VIEWERS,
A.MES AS MES_CALEND,
A.MES_INI AS MES_COHORT,
SUM(A.TGMV) TGMV,
SUM(A.PLAY_TIME) PLAY_TIME,
B.MES_INDEX_AHA,
B.MES_AHA,
C.DEVICE,
C.device_desk_app,
C.device_tv
FROM TABELA A
LEFT JOIN TABELA2 B ON A.SIT_SITE_ID = B.SIT_SITE_ID AND A.CUS_CUST_ID = B.CUS_CUST_ID AND A.MES >= B.MES_AHA
LEFT JOIN DEVICE_MES C ON A.SIT_SITE_ID = C.SIT_SITE_ID AND A.CUS_CUST_ID = C.CUS_CUST_ID AND A.MES = C.MES_PLAY
GROUP BY ALL
ORDER BY 1,2,3


--- https://docs.google.com/spreadsheets/d/19A-lghBTgdZTaSwWrhM6aST666wucwT9Ut9Ete5o2KI/edit?gid=396710391#gid=396710391
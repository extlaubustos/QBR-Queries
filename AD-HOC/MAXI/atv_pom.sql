WITH
-- 1. Clasificación diaria de usuarios y asignación de FLAG
NEW_RET_RECO AS (
    SELECT
        SIT_SITE_ID,
        USER_ID,
        DS,
        START_PLAY_TIMESTAMP,
        DATE_TRUNC(DS, MONTH) AS MONTH_COHORT,
        LAG(DS, 1) OVER(PARTITION BY SIT_SITE_ID, USER_ID ORDER BY START_PLAY_TIMESTAMP ASC) AS DS_ANT,
        CASE
            WHEN LAG(DS, 1) OVER(PARTITION BY SIT_SITE_ID, USER_ID ORDER BY START_PLAY_TIMESTAMP ASC) IS NULL THEN 'NEW'
            WHEN DATE_DIFF(DS, LAG(DS, 1) OVER(PARTITION BY SIT_SITE_ID, USER_ID ORDER BY START_PLAY_TIMESTAMP ASC), DAY) <= 30 THEN 'RETAINED'
            WHEN DATE_DIFF(DS, LAG(DS, 1) OVER(PARTITION BY SIT_SITE_ID, USER_ID ORDER BY START_PLAY_TIMESTAMP ASC), DAY) > 30 THEN 'RECOVERED'
            ELSE NULL
        END AS FLAG_N_R
    FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS`
    WHERE PLAYBACK_TIME_MILLISECONDS/1000 >= 20
      AND DS <= CURRENT_DATE - 1
),

-- 2. Cohortes por primer play en ese mes/flag
COHORTES AS (
    SELECT
        SIT_SITE_ID,
        USER_ID,
        FLAG_N_R,
        MONTH_COHORT AS MONTH_COHORT_ACQ,
        MIN(DS) AS FIRST_DAY_OF_COHORT
    FROM NEW_RET_RECO
    WHERE FLAG_N_R IS NOT NULL
      AND MONTH_COHORT IN (DATE '2025-07-01', DATE '2025-08-01', DATE '2025-09-01')
    GROUP BY 1, 2, 3, 4
),

-- 3. Plays por usuario por mes
PLAYS_USER_MONTH AS (
    SELECT
        SIT_SITE_ID,
        USER_ID,
        DATE_TRUNC(DS, MONTH) AS MONTH_PLAY,
        SUM(PLAYBACK_TIME_MILLISECONDS/60000) AS TVM
    FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS`
    WHERE PLAYBACK_TIME_MILLISECONDS/1000 >= 20
      AND DS >= DATE '2025-07-01'
      AND DS <= DATE '2025-09-30'
    GROUP BY 1, 2, 3
),

-- 4. Generamos las filas para M0, M1, M2 en cada cohorte
COHORTES_RET AS (
    -- M0
    SELECT
        C.SIT_SITE_ID,
        C.USER_ID,
        C.FLAG_N_R,
        C.MONTH_COHORT_ACQ,
        0 AS MONTH_RETENTION,
        C.MONTH_COHORT_ACQ AS MONTH_ANALYSIS
    FROM COHORTES C

    UNION ALL

    -- M1
    SELECT
        C.SIT_SITE_ID,
        C.USER_ID,
        C.FLAG_N_R,
        C.MONTH_COHORT_ACQ,
        1 AS MONTH_RETENTION,
        DATE_ADD(C.MONTH_COHORT_ACQ, INTERVAL 1 MONTH)
    FROM COHORTES C
    WHERE C.MONTH_COHORT_ACQ IN (DATE '2025-07-01', DATE '2025-08-01')

    UNION ALL

    -- M2 (solo válido para julio)
    SELECT
        C.SIT_SITE_ID,
        C.USER_ID,
        C.FLAG_N_R,
        C.MONTH_COHORT_ACQ,
        2 AS MONTH_RETENTION,
        DATE_ADD(C.MONTH_COHORT_ACQ, INTERVAL 2 MONTH)
    FROM COHORTES C
    WHERE C.MONTH_COHORT_ACQ = DATE '2025-07-01'
),

-- 5. Plataforma
PLATFORM_DATA AS (
    SELECT
        SIT_SITE_ID,
        USER_ID,
        DATE_TRUNC(DS, MONTH) AS MONTH_ID,
        CASE
            WHEN ROUND(SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%TV%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END), 2)
                = ROUND(SUM(CASE WHEN PLAYBACK_TIME_MILLISECONDS_CAST/1000 >= 20 THEN PLAYBACK_TIME_MILLISECONDS_CAST/60000 ELSE 0 END), 2)
                AND SUM(CASE WHEN PLAYBACK_TIME_MILLISECONDS_CAST/1000 >= 20 THEN PLAYBACK_TIME_MILLISECONDS_CAST/60000 ELSE 0 END) > 0
                THEN 'CAST'
            ELSE TRIM(
                CONCAT(
                    CASE WHEN SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%TV%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) > 0 THEN 'SMART - ' ELSE '' END,
                    CASE WHEN SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%MOBILE%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) > 0 THEN 'MOBILE - ' ELSE '' END,
                    CASE WHEN SUM(CASE WHEN UPPER(DEVICE_PLATFORM) LIKE '%DESK%' THEN PLAYBACK_TIME_MILLISECONDS/60000 ELSE 0 END) > 0 THEN 'DESKTOP - ' ELSE '' END,
                    CASE WHEN SUM(CASE WHEN PLAYBACK_TIME_MILLISECONDS_CAST/1000 >= 20 THEN PLAYBACK_TIME_MILLISECONDS_CAST/60000 ELSE 0 END) > 0 THEN 'CAST' ELSE '' END
                )
            )
        END AS PLATFORM_CONCAT
    FROM `meli-bi-data.WHOWNER.BT_MKT_MPLAY_PLAYS`
    WHERE PLAYBACK_TIME_MILLISECONDS/1000 >= 20
      AND DATE_TRUNC(DS, MONTH) IN (DATE '2025-07-01', DATE '2025-08-01', DATE '2025-09-01')
    GROUP BY SIT_SITE_ID, USER_ID, DATE_TRUNC(DS, MONTH)
),

-- 6. Channel de attribution
MATT_TOTAL_CHANNEL_MONTH AS (
    SELECT
        M.SIT_SITE_ID,
        COALESCE(C.USER_ID, S.USER_ID) AS USER_ID,
        DATE_TRUNC(CONVERSION_CREATED_DATE, MONTH) AS MONTH_ID,
        CASE
            WHEN (MATT_PLAYER IS NOT NULL AND MATT_PLAYER != '')
                THEN MATT_PLAYER
            ELSE MATT_TYPE_SOURCE
        END AS CHANNEL
    FROM `growth-attribution.production.BT_MATT_FINE_TUNED_MERCADOPLAY` AS M
    LEFT JOIN `meli-bi-data.WHOWNER.LK_MPLAY_FIRST_PLAY` AS C
        ON C.first_play_hash_id = M.CONVERSION_ID
        AND M.CONVERSION_CREATED_DATE <= DATE'2024-10-31'
    LEFT JOIN `meli-bi-data.WHOWNER.LK_MPLAY_FIRST_SESSION` AS S
        ON S.FIRST_SESSION_HASH_ID = M.CONVERSION_ID
        AND M.CONVERSION_CREATED_DATE >= DATE'2024-11-01'
    GROUP BY ALL
),

-- 7. Cohort size por segmento
COHORT_SIZE AS (
  SELECT
    CR.MONTH_COHORT_ACQ,
    CR.FLAG_N_R,
    MTCM.CHANNEL,
    PD.PLATFORM_CONCAT,
    COUNT(DISTINCT CR.USER_ID) AS COHORT_SIZE
  FROM COHORTES_RET CR
  LEFT JOIN MATT_TOTAL_CHANNEL_MONTH MTCM
    ON CR.SIT_SITE_ID = MTCM.SIT_SITE_ID
   AND CR.USER_ID = MTCM.USER_ID
   AND CR.MONTH_COHORT_ACQ = MTCM.MONTH_ID
  LEFT JOIN PLATFORM_DATA PD
    ON CR.SIT_SITE_ID = PD.SIT_SITE_ID
   AND CR.USER_ID = PD.USER_ID
   AND CR.MONTH_COHORT_ACQ = PD.MONTH_ID
  GROUP BY CR.MONTH_COHORT_ACQ, CR.FLAG_N_R, MTCM.CHANNEL, PD.PLATFORM_CONCAT
),

-- 8. Métrica final de retención
RES_FINAL AS (
    SELECT
        CR.MONTH_COHORT_ACQ,
        CR.FLAG_N_R,
        CR.MONTH_RETENTION,
        CR.MONTH_ANALYSIS,
        MTCM.CHANNEL,
        PD.PLATFORM_CONCAT,
        SUM(COALESCE(PUM.TVM, 0)) AS SUM_TVM
    FROM COHORTES_RET CR
    LEFT JOIN PLAYS_USER_MONTH PUM
      ON CR.SIT_SITE_ID = PUM.SIT_SITE_ID
     AND CR.USER_ID = PUM.USER_ID
     AND CR.MONTH_ANALYSIS = PUM.MONTH_PLAY
    LEFT JOIN MATT_TOTAL_CHANNEL_MONTH MTCM
      ON CR.SIT_SITE_ID = MTCM.SIT_SITE_ID
     AND CR.USER_ID = MTCM.USER_ID
     AND CR.MONTH_COHORT_ACQ = MTCM.MONTH_ID
    LEFT JOIN PLATFORM_DATA PD
      ON CR.SIT_SITE_ID = PD.SIT_SITE_ID
     AND CR.USER_ID = PD.USER_ID
     AND CR.MONTH_COHORT_ACQ = PD.MONTH_ID
    WHERE CR.MONTH_ANALYSIS BETWEEN DATE '2025-07-01' AND DATE '2025-09-01'
    GROUP BY CR.MONTH_COHORT_ACQ, CR.FLAG_N_R, CR.MONTH_RETENTION, CR.MONTH_ANALYSIS,
             MTCM.CHANNEL, PD.PLATFORM_CONCAT
)

SELECT
    RF.MONTH_COHORT_ACQ,
    RF.FLAG_N_R,
    RF.CHANNEL,
    RF.PLATFORM_CONCAT,
    RF.MONTH_RETENTION,      -- 0=M0, 1=M1, 2=M2
    CS.COHORT_SIZE,
    ROUND(RF.SUM_TVM, 2) AS SUM_TVM,
    CASE WHEN CS.COHORT_SIZE > 0 THEN ROUND(RF.SUM_TVM / CS.COHORT_SIZE, 2) ELSE NULL END AS ATV
FROM RES_FINAL RF
LEFT JOIN COHORT_SIZE CS
  ON RF.MONTH_COHORT_ACQ = CS.MONTH_COHORT_ACQ
 AND RF.FLAG_N_R = CS.FLAG_N_R
 AND RF.CHANNEL = CS.CHANNEL
 AND RF.PLATFORM_CONCAT = CS.PLATFORM_CONCAT
ORDER BY RF.MONTH_COHORT_ACQ, RF.FLAG_N_R, RF.CHANNEL, RF.PLATFORM_CONCAT, RF.MONTH_RETENTION